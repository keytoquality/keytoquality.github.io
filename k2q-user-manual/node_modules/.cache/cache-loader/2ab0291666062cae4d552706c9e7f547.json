{"remainingRequest":"C:\\Users\\higgi\\Documents\\GitHub\\keytoqualitysite\\k2q-user-manual\\node_modules\\babel-loader\\lib\\index.js??ref--11-1!C:\\Users\\higgi\\Documents\\GitHub\\keytoqualitysite\\k2q-user-manual\\node_modules\\@docusaurus\\mdx-loader\\src\\index.js??ref--11-2!C:\\Users\\higgi\\Documents\\GitHub\\keytoqualitysite\\k2q-user-manual\\node_modules\\@docusaurus\\plugin-content-docs\\lib\\markdown\\index.js??ref--11-3!C:\\Users\\higgi\\Documents\\GitHub\\keytoqualitysite\\k2q-user-manual\\docs\\02whatisk2q.md","dependencies":[{"path":"C:\\Users\\higgi\\Documents\\GitHub\\keytoqualitysite\\k2q-user-manual\\docs\\02whatisk2q.md","mtime":1603838517964},{"path":"C:\\Users\\higgi\\Documents\\GitHub\\keytoqualitysite\\k2q-user-manual\\.docusaurus\\docusaurus-plugin-content-docs\\default\\site-docs-02-whatisk-2-q-md-6c2.json","mtime":1603911168171},{"path":"C:\\Users\\higgi\\Documents\\GitHub\\keytoqualitysite\\k2q-user-manual\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1603752393488},{"path":"C:\\Users\\higgi\\Documents\\GitHub\\keytoqualitysite\\k2q-user-manual\\node_modules\\babel-loader\\lib\\index.js","mtime":1603752393398},{"path":"C:\\Users\\higgi\\Documents\\GitHub\\keytoqualitysite\\k2q-user-manual\\node_modules\\@docusaurus\\mdx-loader\\src\\index.js","mtime":1603752406974},{"path":"C:\\Users\\higgi\\Documents\\GitHub\\keytoqualitysite\\k2q-user-manual\\node_modules\\@docusaurus\\plugin-content-docs\\lib\\markdown\\index.js","mtime":1603752405025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iQzovVXNlcnMvaGlnZ2kvRG9jdW1lbnRzL0dpdEh1Yi9rZXl0b3F1YWxpdHlzaXRlL2sycS11c2VyLW1hbnVhbC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyI7aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20iQzovVXNlcnMvaGlnZ2kvRG9jdW1lbnRzL0dpdEh1Yi9rZXl0b3F1YWxpdHlzaXRlL2sycS11c2VyLW1hbnVhbC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSI7aW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JztleHBvcnQgdmFyIGZyb250TWF0dGVyPXtpZDond2hhdGlzazJxJyx0aXRsZTonQWJvdXQgSzJRJyxoaWRlX3RpdGxlOnRydWUsY3VzdG9tX2VkaXRfdXJsOm51bGx9O2V4cG9ydCB2YXIgbWV0YWRhdGE9eyJ1bnZlcnNpb25lZElkIjoid2hhdGlzazJxIiwiaWQiOiJ3aGF0aXNrMnEiLCJpc0RvY3NIb21lUGFnZSI6ZmFsc2UsInRpdGxlIjoiQWJvdXQgSzJRIiwiZGVzY3JpcHRpb24iOiJPdmVydmlldyIsInNvdXJjZSI6IkBzaXRlL2RvY3NcXDAyd2hhdGlzazJxLm1kIiwic2x1ZyI6Ii93aGF0aXNrMnEiLCJwZXJtYWxpbmsiOiIvazJxLXVzZXItbWFudWFsL3doYXRpc2sycSIsImVkaXRVcmwiOm51bGwsInZlcnNpb24iOiJjdXJyZW50Iiwic2lkZWJhciI6InNvbWVTaWRlYmFyIiwicHJldmlvdXMiOnsidGl0bGUiOiJXZWxjb21lIiwicGVybWFsaW5rIjoiL2sycS11c2VyLW1hbnVhbC8ifSwibmV4dCI6eyJ0aXRsZSI6IksyUSBNb2R1bGVzIiwicGVybWFsaW5rIjoiL2sycS11c2VyLW1hbnVhbC9rMnFtb2R1bGVzIn19Oy8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi8gLyogQGpzeCBtZHggKi9leHBvcnQgdmFyIHJpZ2h0VG9jPVt7dmFsdWU6J092ZXJ2aWV3JyxpZDonb3ZlcnZpZXcnLGNoaWxkcmVuOltdfSx7dmFsdWU6J0N1c3RvbWVyIEZvY3VzJyxpZDonY3VzdG9tZXItZm9jdXMnLGNoaWxkcmVuOltdfSx7dmFsdWU6J1dvcmtmbG93cycsaWQ6J3dvcmtmbG93cycsY2hpbGRyZW46W119LHt2YWx1ZTonTW9kZXJuIFVYIC8gRGVzaWduJyxpZDonbW9kZXJuLXV4LS1kZXNpZ24nLGNoaWxkcmVuOltdfSx7dmFsdWU6J1N5c3RlbSBSZXF1aXJlbWVudHMnLGlkOidzeXN0ZW0tcmVxdWlyZW1lbnRzJyxjaGlsZHJlbjpbXX1dO3ZhciBsYXlvdXRQcm9wcz17cmlnaHRUb2M6cmlnaHRUb2N9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsWyJjb21wb25lbnRzIl0pO3JldHVybiBtZHgoTURYTGF5b3V0LF9leHRlbmRzKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDIiLHsiaWQiOiJvdmVydmlldyJ9LCJPdmVydmlldyIpLG1keCgicCIsbnVsbCwiSzJRIGlzIGEgY2xvdWQgYmFzZWQgcXVhbGl0eSBtYW5hZ2VtZW50IHN5c3RlbS4gSXQncyBjb21wcmlzZWQgb2Ygc2VwZXJhdGUgbW9kdWxlcywgd2hpY2ggZWFjaCBwZXJmb3JtIHNwZWNpZmljIGZ1bmN0aW9ucyByZWxhdGVkIHRvIGRpZmZlcmVudCBhcmVhcyB3aXRoaW4gdGhlIHN1YmplY3Qgb2YgUXVhbGl0eSBNYW5hZ2VtZW50LiBLMlEgaXMgdGhlIHByb2R1Y3Qgb2YgcGFpbnN0YWtpbmcgZGV2ZWxvcG1lbnQgYnkgYSB0ZWFtIG9mIHF1YWxpdHkgcHJvZmVzc2lvbmFscyB3aXRoIHllYXJzIG9mIGluZHVzdHJ5IGV4cGVyaWVuY2UsIHRvIGJyaW5nIGEgc3lzdGVtIHRoYXQgcHJvdmlkZXMgYSBzaW1wbGUgYW5kIHN0cmFpZ2h0Zm9yd2FyZCBwbGF0Zm9ybSBmb3IgaW1wbGVtZW50aW5nIGNvbXBsZXggcXVhbGl0eSBwcm9jZXNzZXMgaW50byBkYXkgdG8gZGF5IGJ1c2luZXNzIG9wZXJhdGlvbnMuIFRoZSBtb2R1bGVzIGNhbiBiZSBpbXBsZW1lbnRlZCBhcyBzdGFuZGFsb25lIHByb2dyYW1zIG9yIGluIGNvbWJpbmF0aW9uIHdpdGggZWFjaCBvdGhlciwgd2hpY2ggcHJvdmlkZXMgc29tZSB1bmlxdWUgaW50ZWdyYXRlZCBmZWF0dXJlcy4iKSxtZHgoImgyIix7ImlkIjoiY3VzdG9tZXItZm9jdXMifSwiQ3VzdG9tZXIgRm9jdXMiKSxtZHgoInAiLG51bGwsIlF1YWxpdHkgTWFuYWdlbWVudCBTeXN0ZW1zIGFyZSBvZnRlbiBmb2N1c2VkIG9uIHRoZSBtYW5hZ2VtZW50IG9mIGRvY3VtZW50YXRpb24uIFdoaWxlIHRoaXMgcHJvdmlkZXMgYW4gaW1wb3J0YW50IGFuZCBuZWNjZXNzYXJ5IGZ1bmN0aW9uIHRvIGEgYnVzaW5lc3MsIHRoaXMgZG9lcyBub3QgbmVjY2VzYXJpbHkgdHJhbnNsYXRlIGludG8gYW4gaW1wcm92ZWQgZXhwZXJpZW5jZSBmb3IgdGhlIGN1c3RvbWVyLiBLMlEgaGFzIGJlZW4gZGVzaWduZWQgd2l0aCBicmluZ2luZyB0aGUgY3VzdG9tZXIgZm9jdXMgYmFjaywgcHJvdmlkaW5nIHRoZSBmcmFtZXdvcmsgYW5kIHN0cnVjdHVyZSB5b3UgbmVlZCB0byBjYXJyeSBvdXQgYmVzdCBidXNpbmVzcyBwcmFjdGljZXMsIHdoaWxlIGdpdmluZyB5b3UgdGhlIHBvd2VyIHRvIGltcGxlbWVudCBhbmQgY29udHJvbCByb2J1c3QgcXVhbGl0eSBwcm9jZXNzZXMgdGhhdCBkaXJlY3RseSB0cmFuc2xhdGUgaW50byBpbXByb3ZlZCBjdXN0b21lciBzYXRpc2ZhY3Rpb24gYW5kIGJ1c2luZXNzIGV4Y2VsbGVuY2UuIiksbWR4KCJwIixudWxsLCJZb3UgZG9uJ3QgaGF2ZSB0byB3b3JrIGluIHRoZSBxdWFsaXR5IHByb2Zlc3Npb24gdG8gZ2FpbiBiZW5lZml0IGZyb20gdXNpbmcgSzJRIGVpdGhlci4gT2Z0ZW4gdGhlIHJlc3BvbnNpYmlsaXR5IGZvciBpbXBsZW1lbnRpbmcgcXVhbGl0eSBhc3N1cmFuY2UgYW5kIGNvbnRyb2wgdGFza3MgZmFsbCB0byBzdGFrZWhvbGRlcnMgb3V0c2lkZSBvZiBhbiBvcmdhbmlzYXRpb24ncyBxdWFsaXR5IGRlcGFydG1lbnQuIEluIG1vZGVybiwgY29udGVtcG9yYXJ5IG9yZ2FuaXNhdGlvbnMgZXZlcnlvbmUgaXMgcmVzcG9uc2libGUgZm9yIG1haW50YWluaW5nIHF1YWxpdHkgc3RhbmRhcmRzLiBUbyB0aGlzIGVmZmVjdCwgTWFudWZhY3R1cmluZywgRW5naW5lZXJpbmcgYW5kIERlc2lnbiB0ZWFtcyBjYW4gYWxzbyBiZW5lZml0IGZyb20gdGhlIGZ1bmN0aW9ucyBLMlEgY2FuIHByb3ZpZGUuIiksbWR4KCJoMiIseyJpZCI6IndvcmtmbG93cyJ9LCJXb3JrZmxvd3MiKSxtZHgoInAiLG51bGwsIkF0IHRoZSBoZWFydCBvZiB0aGUgSzJRIHN5c3RlbSBpcyBvdXIgcG93ZXJmdWwgd29ya2Zsb3cgZW5naW5lLiBXb3JrZmxvd3MgYXJlIHRoZSB3YXkgd2UgZ2V0IHRoaW5ncyBkb25lLiBBbnl0aW1lIHdlIHBlcmZvcm0gYSBzZXJpZXMgb2Ygc3RlcHMgdG8gYWNoaWV2ZSBhbiBlbmQgcmVzdWx0IHdlIGFyZSBjYXJyeWluZyBvdXQgYSB3b3JrZmxvdy4iKSxtZHgoImgyIix7ImlkIjoibW9kZXJuLXV4LS1kZXNpZ24ifSwiTW9kZXJuIFVYIC8gRGVzaWduIiksbWR4KCJwIixudWxsLCJLMlEgaXMgYSBjdXQgYWJvdmUgdGhlIHJlc3Qgd2hlbiBpdCBjb21lcyB0byB1c2VyIGV4cGVyaWVuY2UuICIpLG1keCgiaDIiLHsiaWQiOiJzeXN0ZW0tcmVxdWlyZW1lbnRzIn0sIlN5c3RlbSBSZXF1aXJlbWVudHMiKSxtZHgoInAiLG51bGwsIkludGVybmV0IGNvbm5lY3Rpb24gYW5kIHdlYiBicm93c2VyLiBUaGF0J3MgaXQuIEsyUSB3b3JrcyBhY3Jvc3MgYW55IHBsYXRmb3JtLiBObyBzcGVjaWFsIGhhcmR3YXJlIG9yIHNvZnR3YXJlIHJlcXVpcmVtZW50cyBuZWVkZWQuIikpO307TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},null]}